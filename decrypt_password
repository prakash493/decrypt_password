Steps To Decrypt The Password:
•	Install fresh splunk in a new server.
•	Don’t start the splunk.
•	Copy this file $SPLUNK_HOME/etc/auth/splunk.secret and place it into the new server.
•	Create the splunk app with app.conf that has the password.
Example: [credential:<realm>:<username>]
password = <string>
•	Now add the following to $SPLUNK_HOME/etc/apps/test_app/local/app.conf, for example:
[credential::test]
password = $1$ftbB4rpE71vqrtiM74TP
•	create the following script in $SPLUNK_HOME/etc/apps/test_app/bin/test.py

import splunk.entity as entity
import splunk.auth, splunk.search

def getCredentials(sessionKey):
    myapp = 'test_app'
    try:
        # list all credentials
        entities = entity.getEntities(
            ['admin', 'passwords'], namespace=myapp,
            owner='nobody', sessionKey=sessionKey)
    except Exception, e:
        raise Exception(
            "Could not get %s credentials from splunk."
            "Error: %s" % (myapp, str(e)))
    credentials = []
    # return credentials 
    for i, c in entities.items():
        credentials.append((c['username'], c['clear_password']))
    return credentials
    raise Exception("No credentials have been found")
sessionKey = splunk.auth.getSessionKey('admin','changeme')
credentials = getCredentials(sessionKey)
for username, password in credentials:
    print username
    print password
    







•	Make sure you change the app name and the Splunk username and password to match your environment.
•	Once I restart Splunk, I am ready to run the script to decrypt this password:
              $SPLUNK_HOME/bin/splunk cmd python $SPLUNK_HOME/etc/apps/test_app/bin/test.py
•	I get the following output:
test
plain text password

•	make sure to delete my dev Splunk instance so that when I need to test something else, it’s not using the splunk.secret from my production environment.
